{"version":3,"file":"ant-design-draggable-modal.cjs.development.js","sources":["../src/DraggableModalContext.ts","../src/ResizeHandle.tsx","../src/useDrag.ts","../src/usePrevious.ts","../src/useResize.ts","../src/DraggableModalInner.tsx","../src/getWindowSize.ts","../src/clamp.ts","../src/draggableModalReducer.ts","../src/DraggableModal.tsx","../src/DraggableModalProvider.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Action, ModalsState } from './draggableModalReducer'\n\nexport interface DraggableModalContextMethods {\n    dispatch: (action: Action) => void\n}\n\nexport interface DraggableModalContextValue extends DraggableModalContextMethods {\n    state: ModalsState\n}\n\nexport const DraggableModalContext = React.createContext<DraggableModalContextValue | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n    DraggableModalContext.displayName = 'DraggableModalContext'\n}\n","import * as React from 'react'\n\nexport const ResizeHandle = (\n    props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>,\n): React.ReactElement => (\n    <div className=\"ant-design-draggable-modal-resize-handle\" {...props}>\n        <div className=\"ant-design-draggable-modal-resize-handle-inner\" />\n    </div>\n)\n","import * as React from 'react'\nimport { useState, useEffect, useCallback } from 'react'\n\nexport const useDrag = (\n    x: number,\n    y: number,\n    onDrag: (args: { x: number; y: number }) => void,\n): ((e: React.MouseEvent) => void) => {\n    const [dragging, setDragging] = useState(false)\n    const [initialDragState, setInitialDragState] = useState({\n        initX: 0,\n        initY: 0,\n        mouseDownX: 0,\n        mouseDownY: 0,\n    })\n\n    const onMouseDown = useCallback(\n        (e: React.MouseEvent) => {\n            e.preventDefault()\n            setInitialDragState({\n                initX: x,\n                initY: y,\n                mouseDownX: e.clientX,\n                mouseDownY: e.clientY,\n            })\n            setDragging(true)\n        },\n        [x, y, setDragging, setInitialDragState],\n    )\n\n    useEffect(() => {\n        const onMouseMove = (e: MouseEvent): void => {\n            if (dragging) {\n                const { initX, mouseDownX, initY, mouseDownY } = initialDragState\n                let dx = e.clientX - mouseDownX\n                let dy = e.clientY - mouseDownY\n                const x = initX + dx\n                const y = initY + dy\n                onDrag({ x, y })\n            }\n        }\n        window.addEventListener('mousemove', onMouseMove, { passive: true })\n        return () => window.removeEventListener('mousemove', onMouseMove)\n    }, [initialDragState, dragging, onDrag])\n\n    useEffect(() => {\n        const onMouseUp = (): void => {\n            setDragging(false)\n        }\n        window.addEventListener('mouseup', onMouseUp)\n        return () => window.removeEventListener('mouseup', onMouseUp)\n    }, [setDragging])\n\n    return onMouseDown\n}\n","import { useRef, useEffect } from 'react'\n\nexport const usePrevious = <T>(value: T): T => {\n    const ref = useRef<T>(value)\n    useEffect(() => {\n        ref.current = value\n    }, [value])\n    return ref.current\n}\n","import * as React from 'react'\nimport { useState, useEffect, useCallback } from 'react'\n\ninterface InitialState {\n    initX: number\n    initY: number\n    initWidth: number\n    initHeight: number\n    mouseDownX: number\n    mouseDownY: number\n}\n\nexport const useResize = (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    onResize: (args: { x: number; y: number; width: number; height: number }) => void,\n): ((e: React.MouseEvent) => void) => {\n    const [dragging, setDragging] = useState(false)\n    const [initialDragState, setInitialDragState] = useState<InitialState>({\n        initX: 0,\n        initY: 0,\n        initWidth: 0,\n        initHeight: 0,\n        mouseDownX: 0,\n        mouseDownY: 0,\n    })\n\n    const onMouseDown = useCallback(\n        (e: React.MouseEvent) => {\n            e.preventDefault()\n            setInitialDragState({\n                initX: x,\n                initY: y,\n                initWidth: width,\n                initHeight: height,\n                mouseDownX: e.clientX,\n                mouseDownY: e.clientY,\n            })\n            setDragging(true)\n        },\n        [width, height, setDragging, setInitialDragState, x, y],\n    )\n\n    useEffect(() => {\n        const onMouseMove = (e: MouseEvent): void => {\n            if (dragging) {\n                const {\n                    initX,\n                    initY,\n                    initWidth,\n                    mouseDownX,\n                    initHeight,\n                    mouseDownY,\n                } = initialDragState\n                let dx = e.clientX - mouseDownX\n                let dy = e.clientY - mouseDownY\n                const width = initWidth + dx\n                const height = initHeight + dy\n                return onResize({ x: initX, y: initY, width, height })\n            }\n        }\n        window.addEventListener('mousemove', onMouseMove, { passive: true })\n        return () => window.removeEventListener('mousemove', onMouseMove)\n    }, [initialDragState, dragging, onResize])\n\n    useEffect(() => {\n        const onMouseUp = (): void => {\n            setDragging(false)\n        }\n        window.addEventListener('mouseup', onMouseUp)\n        return () => window.removeEventListener('mouseup', onMouseUp)\n    }, [setDragging])\n\n    return onMouseDown\n}\n","import * as React from 'react'\nimport { useEffect, useMemo, useCallback, memo } from 'react'\nimport { Modal } from 'antd'\nimport { ModalProps } from 'antd/lib/modal'\nimport { ResizeHandle } from './ResizeHandle'\nimport { useDrag } from './useDrag'\nimport { DraggableModalContextMethods } from './DraggableModalContext'\nimport { usePrevious } from './usePrevious'\nimport { ModalID, ModalState } from './draggableModalReducer'\nimport { useResize } from './useResize'\n\nconst modalStyle: React.CSSProperties = { margin: 0, paddingBottom: 0, pointerEvents: 'auto' }\n\ninterface ContextProps extends DraggableModalContextMethods {\n    id: ModalID\n    modalState: ModalState\n    initialWidth?: number\n    initialHeight?: number\n}\n\nexport type DraggableModalInnerProps = ModalProps & { children?: React.ReactNode } & ContextProps\n\nfunction DraggableModalInnerNonMemo({\n    id,\n    modalState,\n    dispatch,\n    open,\n    children,\n    title,\n    initialWidth,\n    initialHeight,\n    ...otherProps\n}: DraggableModalInnerProps) {\n    // Call on mount and unmount.\n    useEffect(() => {\n        dispatch({ type: 'mount', id, intialState: { initialWidth, initialHeight } })\n        return () => dispatch({ type: 'unmount', id })\n    }, [dispatch, id, initialWidth, initialHeight])\n\n    // Bring this to the front if it's been opened with props.\n    const openPrevious = usePrevious(open)\n    useEffect(() => {\n        if (open !== openPrevious) {\n            if (open) {\n                dispatch({ type: 'show', id })\n            } else {\n                dispatch({ type: 'hide', id })\n            }\n        }\n    }, [open, openPrevious, id, dispatch])\n\n    const { zIndex, x, y, width, height } = modalState\n\n    const style: React.CSSProperties = useMemo(() => ({ ...modalStyle, top: y, left: x, height }), [\n        y,\n        x,\n        height,\n    ])\n\n    const onFocus = useCallback(() => dispatch({ type: 'focus', id }), [id, dispatch])\n\n    // @ts-ignore\n    const onDragWithID = useCallback(args => dispatch({ type: 'drag', id, ...args }), [\n        dispatch,\n        id,\n    ])\n\n    // @ts-ignore\n    const onResizeWithID = useCallback(args => dispatch({ type: 'resize', id, ...args }), [\n        dispatch,\n        id,\n    ])\n\n    const onMouseDrag = useDrag(x, y, onDragWithID)\n    const onMouseResize = useResize(x, y, width, height, onResizeWithID)\n\n    const titleElement = useMemo(\n        () => (\n            <div\n                className=\"ant-design-draggable-modal-title\"\n                onMouseDown={onMouseDrag}\n                onClick={onFocus}\n            >\n                {title}\n            </div>\n        ),\n        [onMouseDrag, onFocus, title],\n    )\n\n    return (\n        <Modal\n            wrapClassName=\"ant-design-draggable-modal\"\n            style={style}\n            width={width}\n            destroyOnClose={true}\n            mask={false}\n            maskClosable={false}\n            zIndex={zIndex}\n            title={titleElement}\n            open={open}\n            {...otherProps}\n        >\n            {children}\n            <ResizeHandle onMouseDown={onMouseResize} />\n        </Modal>\n    )\n}\n\nexport const DraggableModalInner = memo(DraggableModalInnerNonMemo)\n\nif (process.env.NODE_ENV !== 'production') {\n    DraggableModalInner.displayName = 'DraggableModalInner'\n}\n","export const getWindowSize = (): { width: number; height: number } => ({\n    width: window.innerWidth || 0,\n    height: window.innerHeight || 0,\n})\n","export const clamp = (min: number, max: number, value: number): number =>\n    Math.max(min, Math.min(max, value))\n","import { getWindowSize } from './getWindowSize'\nimport { clamp } from './clamp'\n\nconst mapObject = <T>(o: { [key: string]: T }, f: (value: T) => T): { [key: string]: T } =>\n    Object.assign({}, ...Object.keys(o).map(k => ({ [k]: f(o[k]) })))\n\n// ID for a specific modal.\nexport type ModalID = string\n\n// State for a specific modal.\nexport interface ModalState {\n    x: number\n    y: number\n    width: number\n    height: number\n    zIndex: number\n    open: boolean\n}\n\n// State of all modals.\nexport interface ModalsState {\n    maxZIndex: number\n    windowSize: {\n        width: number\n        height: number\n    }\n    modals: {\n        [key: string]: ModalState\n    }\n}\n\nexport const initialModalsState: ModalsState = {\n    maxZIndex: 0,\n    windowSize: getWindowSize(),\n    modals: {},\n}\n\nexport const initialModalState: ModalState = {\n    x: 0,\n    y: 0,\n    width: 800,\n    height: 800,\n    zIndex: 0,\n    open: false,\n}\n\nconst getInitialModalState = ({\n    initialWidth = initialModalState.width,\n    initialHeight = initialModalState.height,\n}: {\n    initialWidth?: number\n    initialHeight?: number\n}) => {\n    return {\n        ...initialModalState,\n        width: initialWidth,\n        height: initialHeight,\n    }\n}\n\nexport type Action =\n    | { type: 'show'; id: ModalID }\n    | { type: 'hide'; id: ModalID }\n    | { type: 'focus'; id: ModalID }\n    | { type: 'unmount'; id: ModalID }\n    | { type: 'mount'; id: ModalID; intialState: { initialWidth?: number; initialHeight?: number } }\n    | { type: 'windowResize'; size: { width: number; height: number } }\n    | { type: 'drag'; id: ModalID; x: number; y: number }\n    | {\n          type: 'resize'\n          id: ModalID\n          x: number\n          y: number\n          width: number\n          height: number\n      }\n\nexport const getModalState = ({\n    state,\n    id,\n    initialWidth,\n    initialHeight,\n}: {\n    state: ModalsState\n    id: ModalID\n    initialWidth?: number\n    initialHeight?: number\n}): ModalState => state.modals[id] || getInitialModalState({ initialWidth, initialHeight })\n\nconst getNextZIndex = (state: ModalsState, id: string): number =>\n    getModalState({ state, id }).zIndex === state.maxZIndex ? state.maxZIndex : state.maxZIndex + 1\n\nconst clampDrag = (\n    windowWidth: number,\n    windowHeight: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n): { x: number; y: number } => {\n    const maxX = windowWidth - width\n    const maxY = windowHeight - height\n    const clampedX = clamp(0, maxX, x)\n    const clampedY = clamp(0, maxY, y)\n    return { x: clampedX, y: clampedY }\n}\n\nconst clampResize = (\n    windowWidth: number,\n    windowHeight: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n): { width: number; height: number } => {\n    const maxWidth = windowWidth - x\n    const maxHeight = windowHeight - y\n    const clampedWidth = clamp(200, maxWidth, width)\n    const clampedHeight = clamp(200, maxHeight, height)\n    return { width: clampedWidth, height: clampedHeight }\n}\n\nexport const draggableModalReducer = (state: ModalsState, action: Action): ModalsState => {\n    switch (action.type) {\n        case 'resize':\n            const size = clampResize(\n                state.windowSize.width,\n                state.windowSize.height,\n                action.x,\n                action.y,\n                action.width,\n                action.height,\n            )\n            return {\n                ...state,\n                maxZIndex: getNextZIndex(state, action.id),\n                modals: {\n                    ...state.modals,\n                    [action.id]: {\n                        ...state.modals[action.id],\n                        ...size,\n                        zIndex: getNextZIndex(state, action.id),\n                    },\n                },\n            }\n        case 'drag':\n            return {\n                ...state,\n                maxZIndex: getNextZIndex(state, action.id),\n                modals: {\n                    ...state.modals,\n                    [action.id]: {\n                        ...state.modals[action.id],\n                        ...clampDrag(\n                            state.windowSize.width,\n                            state.windowSize.height,\n                            action.x,\n                            action.y,\n                            state.modals[action.id].width,\n                            state.modals[action.id].height,\n                        ),\n                        zIndex: getNextZIndex(state, action.id),\n                    },\n                },\n            }\n        case 'show': {\n            const modalState = state.modals[action.id]\n            const centerX = state.windowSize.width / 2 - modalState.width / 2\n            const centerY = state.windowSize.height / 2 - modalState.height / 2\n            const position = clampDrag(\n                state.windowSize.width,\n                state.windowSize.height,\n                centerX,\n                centerY,\n                modalState.width,\n                modalState.height,\n            )\n            const size = clampResize(\n                state.windowSize.width,\n                state.windowSize.height,\n                position.x,\n                position.y,\n                modalState.width,\n                modalState.height,\n            )\n            return {\n                ...state,\n                maxZIndex: state.maxZIndex + 1,\n                modals: {\n                    ...state.modals,\n                    [action.id]: {\n                        ...modalState,\n                        ...position,\n                        ...size,\n                        zIndex: state.maxZIndex + 1,\n                        open: true,\n                    },\n                },\n            }\n        }\n        case 'focus':\n            const modalState = state.modals[action.id]\n            return {\n                ...state,\n                maxZIndex: state.maxZIndex + 1,\n                modals: {\n                    ...state.modals,\n                    [action.id]: {\n                        ...modalState,\n                        zIndex: state.maxZIndex + 1,\n                    },\n                },\n            }\n        case 'hide': {\n            const modalState = state.modals[action.id]\n            return {\n                ...state,\n                modals: {\n                    ...state.modals,\n                    [action.id]: {\n                        ...modalState,\n                        open: false,\n                    },\n                },\n            }\n        }\n        case 'mount':\n            const initialState = getInitialModalState(action.intialState)\n            return {\n                ...state,\n                maxZIndex: state.maxZIndex + 1,\n                modals: {\n                    ...state.modals,\n                    [action.id]: {\n                        ...initialState,\n                        x: state.windowSize.width / 2 - initialState.width / 2,\n                        y: state.windowSize.height / 2 - initialState.height / 2,\n                        zIndex: state.maxZIndex + 1,\n                    },\n                },\n            }\n        case 'unmount':\n            const modalsClone = { ...state.modals }\n            delete modalsClone[action.id]\n            return {\n                ...state,\n                modals: modalsClone,\n            }\n        case 'windowResize':\n            return {\n                ...state,\n                windowSize: action.size,\n                modals: mapObject(state.modals, (modalState: ModalState) => {\n                    if (!modalState.open) {\n                        return modalState\n                    }\n                    const position = clampDrag(\n                        state.windowSize.width,\n                        state.windowSize.height,\n                        modalState.x,\n                        modalState.y,\n                        modalState.width,\n                        modalState.height,\n                    )\n                    const size = clampResize(\n                        state.windowSize.width,\n                        state.windowSize.height,\n                        position.x,\n                        position.y,\n                        modalState.width,\n                        modalState.height,\n                    )\n                    return {\n                        ...modalState,\n                        ...position,\n                        ...size,\n                    }\n                }),\n            }\n        default:\n            throw new Error()\n    }\n}\n","import * as React from 'react'\nimport { FunctionComponent, ReactElement, useContext } from 'react'\nimport { useUID } from 'react-uid'\nimport { DraggableModalContext } from './DraggableModalContext'\nimport { DraggableModalInner } from './DraggableModalInner'\nimport { getModalState } from './draggableModalReducer'\nimport { ModalProps } from 'antd/lib/modal'\n\nexport interface DraggableModalProps extends ModalProps {\n    initialWidth?: number\n    initialHeight?: number\n}\n\nexport const DraggableModal: FunctionComponent<DraggableModalProps> = (\n    props: DraggableModalProps,\n): ReactElement => {\n    // Get the unique ID of this modal.\n    const id = useUID()\n\n    // Get modal provider.\n    const modalProvider = useContext(DraggableModalContext)\n    if (!modalProvider) {\n        throw new Error('No Provider')\n    }\n\n    const { dispatch, state } = modalProvider\n    const modalState = getModalState({\n        state,\n        id,\n        initialHeight: props.initialHeight,\n        initialWidth: props.initialWidth,\n    })\n\n    // We do this so that we don't re-render all modals for every state change.\n    // DraggableModalInner uses React.memo, so it only re-renders if\n    // if props change (e.g. modalState).\n    return <DraggableModalInner id={id} dispatch={dispatch} modalState={modalState} {...props} />\n}\n","import * as React from 'react'\nimport { useEffect, useReducer } from 'react'\nimport { DraggableModalContext } from './DraggableModalContext'\nimport { getWindowSize } from './getWindowSize'\nimport { draggableModalReducer, initialModalsState } from './draggableModalReducer'\n\nexport const DraggableModalProvider = ({\n    children,\n}: {\n    children: React.ReactNode\n}): React.ReactElement => {\n    const [state, dispatch] = useReducer(draggableModalReducer, initialModalsState)\n\n    useEffect(() => {\n        if (typeof window !== 'object') {\n            return\n        }\n        const onResize = (): void => dispatch({ type: 'windowResize', size: getWindowSize() })\n        window.addEventListener('resize', onResize)\n        onResize()\n        return () => window.removeEventListener('resize', onResize)\n    }, [dispatch])\n\n    return (\n        <DraggableModalContext.Provider\n            value={{\n                state,\n                dispatch,\n            }}\n        >\n            {children}\n        </DraggableModalContext.Provider>\n    )\n}\n"],"names":["DraggableModalContext","React","displayName","ResizeHandle","props","className","useDrag","x","y","onDrag","useState","dragging","setDragging","initX","initY","mouseDownX","mouseDownY","initialDragState","setInitialDragState","onMouseDown","useCallback","e","preventDefault","clientX","clientY","useEffect","onMouseMove","dx","dy","window","addEventListener","passive","removeEventListener","onMouseUp","usePrevious","value","ref","useRef","current","useResize","width","height","onResize","initWidth","initHeight","modalStyle","margin","paddingBottom","pointerEvents","DraggableModalInnerNonMemo","id","modalState","dispatch","open","children","title","initialWidth","initialHeight","otherProps","type","intialState","openPrevious","zIndex","style","useMemo","top","left","onFocus","onDragWithID","args","onResizeWithID","onMouseDrag","onMouseResize","titleElement","onClick","Modal","wrapClassName","destroyOnClose","mask","maskClosable","DraggableModalInner","memo","getWindowSize","innerWidth","innerHeight","clamp","min","max","Math","mapObject","o","f","Object","assign","keys","map","k","initialModalsState","maxZIndex","windowSize","modals","initialModalState","getInitialModalState","getModalState","state","getNextZIndex","clampDrag","windowWidth","windowHeight","maxX","maxY","clampedX","clampedY","clampResize","maxWidth","maxHeight","clampedWidth","clampedHeight","draggableModalReducer","action","size","centerX","centerY","position","initialState","modalsClone","Error","DraggableModal","useUID","modalProvider","useContext","DraggableModalProvider","useReducer","Provider"],"mappings":"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"}